#!/bin/bash

#----------------------------------------------------
# ‚öôÔ∏è –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
#----------------------------------------------------

# üé® –¶–≤–µ—Ç–∞
RESET='\033[0m'
RED='\033[31m'
GREEN='\033[32m'
YELLOW='\033[33m'
BLUE='\033[34m'
CYAN='\033[36m'

# üé≤ –ë–∞–∑–æ–≤—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
HOME_DIR="$(cd "$HOME" && pwd)"
CURRENT_DIR="$(pwd -P)"
BASE_DIR="$HOME/.myshell"

# üóÑÔ∏è –ë—ç–∫–∞–ø –∏ –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏–µ
TIMESTAMP=$(date +"%Y-%m-%d_%H-%M-%S")
BACKUP_DIR="$BASE_DIR/backup"
DATED_BACKUP_DIR="$BACKUP_DIR/backup_$TIMESTAMP"

# üßπ –®–∞–±–ª–æ–Ω—ã —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏
TRASH=".zsh* .tmux* .vim* .oh-my-zsh*"

# üìÇ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
VIM_DIR="$BASE_DIR/vim"
VIM_COLORS_DIR="$VIM_DIR/colors"
VIM_PLUGINS_DIR="$VIM_DIR/plugins"

# üß© –ü–∞–∫–µ—Ç—ã –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ - –±—É–¥—É—Ç —É—Ç–æ—á–Ω–µ–Ω—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–∏—Å—Ç–µ–º—ã
PACKAGES="git curl zsh vim"

# üîó Git-—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
GIT_DOTFILES_REPO="https://github.com/alexbic/dotfiles.git"
GIT_TMUX_REPO="https://github.com/gpakosz/.tmux.git"
GIT_OMZ_REPO="https://github.com/ohmyzsh/ohmyzsh.git"
GIT_OMZ_INSTALL_URL="https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh"

#----------------------------------------------------
# üß† –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
#----------------------------------------------------

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É
OS_TYPE="unknown"
if [[ "$OSTYPE" == "linux-gnu"* ]]; then
    OS_TYPE="linux"
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤ Linux
    if [[ -f /etc/debian_version ]]; then
        DISTRO="debian"
    elif [[ -f /etc/redhat-release ]]; then
        DISTRO="redhat"
    else
        DISTRO="other"
    fi
elif [[ "$OSTYPE" == "darwin"* ]]; then
    OS_TYPE="macos"
else
    echo -e "${RED}‚ùå –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–∞—è –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞: $OSTYPE${RESET}"
    exit 1
fi

echo -e "${BLUE}üñ•Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞: ${GREEN}$OS_TYPE${RESET}"
if [[ "$OS_TYPE" == "linux" ]]; then
    echo -e "${BLUE}üêß –î–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤ Linux: ${GREEN}$DISTRO${RESET}"
fi

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–∞–∫–µ—Ç–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–∏—Å—Ç–µ–º—ã
PACKAGE_MANAGER=""
INSTALL_CMD=""

if [[ "$OS_TYPE" == "linux" ]]; then
    if [[ "$DISTRO" == "debian" ]]; then
        PACKAGE_MANAGER="apt"
        INSTALL_CMD="sudo apt update && sudo apt install -y"
    elif [[ "$DISTRO" == "redhat" ]]; then
        PACKAGE_MANAGER="dnf"
        INSTALL_CMD="sudo dnf install -y"
    else
        echo -e "${YELLOW}‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–∞–∫–µ—Ç–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–∞–∫–µ—Ç—ã –≤—Ä—É—á–Ω—É—é.${RESET}"
    fi
elif [[ "$OS_TYPE" == "macos" ]]; then
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Homebrew
    if command -v brew &>/dev/null; then
        PACKAGE_MANAGER="brew"
        INSTALL_CMD="brew install"
    else
        echo -e "${YELLOW}‚ö†Ô∏è Homebrew –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –í—ã–ø–æ–ª–Ω—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É...${RESET}"
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Homebrew
        if command -v brew &>/dev/null; then
            PACKAGE_MANAGER="brew"
            INSTALL_CMD="brew install"
            echo -e "${GREEN}‚úÖ Homebrew —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${RESET}"
        else
            echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Homebrew. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ –≤—Ä—É—á–Ω—É—é:${RESET}"
            echo -e "   /bin/bash -c \"\$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\""
            exit 1
        fi
    fi
fi

#----------------------------------------------------
# üõ°Ô∏è –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
#----------------------------------------------------

# –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π —Ä–µ–∂–∏–º + –ª–æ–≤—É—à–∫–∞ –æ—à–∏–±–æ–∫
set -euo pipefail
trap 'echo -e "${RED}üö® –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ —Å—Ç—Ä–æ–∫–µ $LINENO. –ó–∞–≤–µ—Ä—à–∞–µ–º.${RESET}"' ERR

# üîê –ó–∞—â–∏—Ç–∞ –æ—Ç –∑–∞–ø—É—Å–∫–∞ –æ—Ç root
if [[ "$EUID" -eq 0 ]]; then
  echo -e "${RED}‚ùå –ù–µ –∑–∞–ø—É—Å–∫–∞–π—Ç–µ —Å–∫—Ä–∏–ø—Ç –æ—Ç root. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å sudo.${RESET}"
  exit 1
fi

# üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É
if ! ping -c 1 1.1.1.1 &>/dev/null; then
  echo -e "${RED}‚ùå –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–µ—Ç—å.${RESET}"
  exit 1
fi

# üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ GitHub
if ! curl -s -o /dev/null -I -L --fail https://github.com; then
  echo -e "${RED}‚ùå GitHub –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ç–∏ –∏–ª–∏ VPN.${RESET}"
  exit 1
fi

# üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—Ç–∞–ª–æ–≥–∞ –∑–∞–ø—É—Å–∫–∞
if [[ "$CURRENT_DIR" != "$HOME_DIR" ]]; then
  echo -e "${RED}‚ùå –°–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω –∏–∑ –¥–æ–º–∞—à–Ω–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: $HOME_DIR${RESET}"
  echo "üìç –°–µ–π—á–∞—Å –≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –∑–¥–µ—Å—å: $CURRENT_DIR"
  exit 1
fi

# üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ sudo (—Ç–æ–ª—å–∫–æ –¥–ª—è Linux)
if [[ "$OS_TYPE" == "linux" ]]; then
  echo -e "${BLUE}üîê –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ sudo...${RESET}"
  if ! sudo -n true 2>/dev/null; then
    echo -e "${YELLOW}‚ö†Ô∏è –î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ç—Ä–µ–±—É—é—Ç—Å—è –ø—Ä–∞–≤–∞ sudo.${RESET}"
    sudo -v || {
      echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–∞–≤–∞ sudo. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å —Ç–∞–∫–∏–µ –ø—Ä–∞–≤–∞.${RESET}"
      exit 1
    }
  fi
fi

#----------------------------------------------------
# üì¶ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
#----------------------------------------------------

echo -e "${BLUE}üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤...${RESET}"

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–∞–∫–µ—Ç–æ–≤ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
if [[ "$OS_TYPE" == "macos" ]]; then
    # –ù–∞ macOS –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —É—Ç–∏–ª–∏—Ç—ã –º–æ–≥—É—Ç –±—ã—Ç—å –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∏–ª–∏ –∏–º–µ—Ç—å –¥—Ä—É–≥–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è
    PACKAGES="git curl zsh vim tmux"
fi

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è –ø–∞–∫–µ—Ç–∞
check_package() {
    local pkg="$1"
    
    if [[ "$OS_TYPE" == "linux" ]]; then
        if [[ "$DISTRO" == "debian" ]]; then
            dpkg -s "$pkg" &>/dev/null
        elif [[ "$DISTRO" == "redhat" ]]; then
            rpm -q "$pkg" &>/dev/null
        else
            command -v "$pkg" &>/dev/null
        fi
    elif [[ "$OS_TYPE" == "macos" ]]; then
        # –ù–∞ macOS –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–Ω–∞—á–∞–ª–∞ —á–µ—Ä–µ–∑ brew, –∑–∞—Ç–µ–º –ø–æ –Ω–∞–ª–∏—á–∏—é –∫–æ–º–∞–Ω–¥—ã
        brew list "$pkg" &>/dev/null || command -v "$pkg" &>/dev/null
    fi
}

NEEDED_PACKAGES=()
for pkg in $PACKAGES; do
  if ! check_package "$pkg"; then
    NEEDED_PACKAGES+=("$pkg")
  fi
done

if [[ ${#NEEDED_PACKAGES[@]} -gt 0 ]]; then
  echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º: ${NEEDED_PACKAGES[*]}"
  
  if [[ -n "$INSTALL_CMD" ]]; then
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–æ–º–∞–Ω–¥—É –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏
    if [[ "$OS_TYPE" == "linux" ]]; then
      if [[ "$DISTRO" == "debian" ]]; then
        sudo apt update
        sudo apt install -y "${NEEDED_PACKAGES[@]}"
      elif [[ "$DISTRO" == "redhat" ]]; then
        sudo dnf install -y "${NEEDED_PACKAGES[@]}"
      fi
    elif [[ "$OS_TYPE" == "macos" ]]; then
      brew install "${NEEDED_PACKAGES[@]}"
    fi
  else
    echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–∞–∫–µ—Ç–æ–≤.${RESET}"
    exit 1
  fi
else
  echo "‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–∫–µ—Ç—ã —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã."
fi

#----------------------------------------------------
# üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π
#----------------------------------------------------

echo -e "${BLUE}üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π...${RESET}"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ .myshell
if [[ -d "$BASE_DIR" ]]; then
  echo -e "${YELLOW}‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ .myshell${RESET}"
  read -p "üìã –•–æ—Ç–∏—Ç–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ç–µ–∫—É—â—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø–µ—Ä–µ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º? (y/n): " SAVE_EXISTING
  
  if [[ "$SAVE_EXISTING" =~ ^[Yy]$ ]]; then
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –Ω–µ–∑–∞–∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–∞–ø–æ–∫ —Å –±—ç–∫–∞–ø–∞–º–∏
    echo -e "${BLUE}üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –ø—Ä–µ–¥—ã–¥—É—â–µ–π –ø–∞–ø–∫–∏ —Å –±—ç–∫–∞–ø–æ–º...${RESET}"
    
    # –ò—â–µ–º –ø–∞–ø–∫–∏ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –±—ç–∫–∞–ø–æ–≤, –Ω–∞—á–∏–Ω–∞—é—â–∏–µ—Å—è —Å "backup_"
    PREV_BACKUP_DIRS=()
    while IFS= read -r dir; do
      # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –ª–∏ –∏–º—è –ø–∞–ø–∫–∏ —Å "backup_"
      dir_name=$(basename "$dir")
      if [[ -d "$dir" && "$dir" != "$BACKUP_DIR" && "$dir_name" == backup_* ]]; then
        PREV_BACKUP_DIRS+=("$dir")
      fi
    done < <(find "$BACKUP_DIR" -mindepth 1 -maxdepth 1 -type d 2>/dev/null || echo "")
    
    # –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–∞—è –ø–∞–ø–∫–∞ —Å –±—ç–∫–∞–ø–æ–º, –∞—Ä—Ö–∏–≤–∏—Ä—É–µ–º –µ—ë
    if [[ ${#PREV_BACKUP_DIRS[@]} -gt 0 ]]; then
      echo -e "${YELLOW}‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–∞—è –ø–∞–ø–∫–∞ —Å –±—ç–∫–∞–ø–æ–º${RESET}"
      
      # –ê—Ä—Ö–∏–≤–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—É—é –Ω–∞–π–¥–µ–Ω–Ω—É—é –ø–∞–ø–∫—É (–¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–Ω–∞)
      backup_dir="${PREV_BACKUP_DIRS[0]}"
      dir_name=$(basename "$backup_dir")
      archive_path="$BACKUP_DIR/$dir_name.tar.gz"
      
      echo -e "${BLUE}üì¶ –ê—Ä—Ö–∏–≤–∏—Ä—É–µ–º –ø–∞–ø–∫—É $backup_dir –≤ $archive_path...${RESET}"
      tar -czf "$archive_path" -C "$backup_dir" . || {
        echo -e "${YELLOW}‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞—Ä—Ö–∏–≤–∞—Ü–∏–∏. –ü—Ä–æ–±—É–µ–º —Å sudo...${RESET}"
        if [[ "$OS_TYPE" == "linux" ]]; then
          sudo tar -czf "$archive_path" -C "$backup_dir" .
        else
          tar -czf "$archive_path" -C "$backup_dir" .
        fi
      }
      
      # –£–¥–∞–ª—è–µ–º –ø–∞–ø–∫—É –ø–æ—Å–ª–µ –∞—Ä—Ö–∏–≤–∞—Ü–∏–∏
      if [[ "$OS_TYPE" == "linux" ]]; then
        rm -rf "$backup_dir" || sudo rm -rf "$backup_dir"
      else
        rm -rf "$backup_dir"
      fi
      
      echo -e "${GREEN}‚úÖ –ü–∞–ø–∫–∞ —Å –±—ç–∫–∞–ø–æ–º –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∞ –≤ $archive_path${RESET}"
      
      # –ï—Å–ª–∏ –ø–æ –∫–∞–∫–æ–π-—Ç–æ –ø—Ä–∏—á–∏–Ω–µ –Ω–∞–π–¥–µ–Ω–æ –±–æ–ª—å—à–µ –æ–¥–Ω–æ–π –ø–∞–ø–∫–∏, –≤—ã–≤–æ–¥–∏–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
      if [[ ${#PREV_BACKUP_DIRS[@]} -gt 1 ]]; then
        echo -e "${YELLOW}‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –ù–∞–π–¥–µ–Ω–æ ${#PREV_BACKUP_DIRS[@]} –ø–∞–ø–æ–∫ —Å –±—ç–∫–∞–ø–∞–º–∏, –Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤–∞—è.${RESET}"
      fi
    else
      echo -e "${GREEN}‚úÖ –ü—Ä–µ–¥—ã–¥—É—â–∏—Ö –ø–∞–ø–æ–∫ —Å –±—ç–∫–∞–ø–∞–º–∏ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ${RESET}"
    fi
    
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –ø–∞–ø–∫—É –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –±—ç–∫–∞–ø–∞
    echo -e "${BLUE}üóÇÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –±—ç–∫–∞–ø–∞: $DATED_BACKUP_DIR${RESET}"
    mkdir -p "$DATED_BACKUP_DIR" || {
      echo -e "${YELLOW}‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –±—ç–∫–∞–ø–∞. –ü—Ä–æ–±—É–µ–º —Å sudo...${RESET}"
      if [[ "$OS_TYPE" == "linux" ]]; then
        sudo mkdir -p "$DATED_BACKUP_DIR"
      else
        mkdir -p "$DATED_BACKUP_DIR"
      fi
    }
    
    # –ö–æ–ø–∏—Ä—É–µ–º —Ç–µ–∫—É—â–µ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ .myshell (–∫—Ä–æ–º–µ –ø–∞–ø–∫–∏ backup)
    echo -e "${BLUE}üîÑ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ $DATED_BACKUP_DIR...${RESET}"
    rsync -a --exclude 'backup/' "$BASE_DIR/" "$DATED_BACKUP_DIR/" || {
      echo -e "${YELLOW}‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏. –ü—Ä–æ–±—É–µ–º —Å sudo...${RESET}"
      if [[ "$OS_TYPE" == "linux" ]]; then
        sudo rsync -a --exclude 'backup/' "$BASE_DIR/" "$DATED_BACKUP_DIR/"
      else
        # –ù–∞ macOS –∏—Å–ø–æ–ª—å–∑—É–µ–º cp –µ—Å–ª–∏ rsync –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
        cp -R "$BASE_DIR"/* "$DATED_BACKUP_DIR/" 2>/dev/null || echo "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏, –Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º..."
      fi
    }
    echo -e "${GREEN}‚úÖ –¢–µ–∫—É—â–µ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ .myshell —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ $DATED_BACKUP_DIR${RESET}"
  else
    echo -e "${YELLOW}‚ö†Ô∏è –ë—ç–∫–∞–ø —Ç–µ–∫—É—â–µ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è .myshell –Ω–µ –±—ã–ª —Å–æ–∑–¥–∞–Ω –ø–æ –≤—ã–±–æ—Ä—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.${RESET}"
  fi
else
  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
  echo -e "${BLUE}üîç –û–∫—Ä—É–∂–µ–Ω–∏–µ .myshell –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π...${RESET}"
  
  EXISTING_CONFIGS=""
  [[ -f "$HOME/.zshrc" || -d "$HOME/.oh-my-zsh" ]] && EXISTING_CONFIGS="${EXISTING_CONFIGS}ZSH "
  [[ -f "$HOME/.tmux.conf" || -f "$HOME/.tmux.conf.local" ]] && EXISTING_CONFIGS="${EXISTING_CONFIGS}TMUX "
  [[ -f "$HOME/.vimrc" || -d "$HOME/.vim" ]] && EXISTING_CONFIGS="${EXISTING_CONFIGS}VIM "
  
  if [[ -n "$EXISTING_CONFIGS" ]]; then
    echo -e "${YELLOW}‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: ${EXISTING_CONFIGS}${RESET}"
    read -p "üìã –•–æ—Ç–∏—Ç–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏? (y/n): " SAVE_CONFIG
  
    if [[ "$SAVE_CONFIG" =~ ^[Yy]$ ]]; then
      echo -e "${BLUE}üóÇÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –¥–ª—è –±—ç–∫–∞–ø–∞...${RESET}"
      
      # –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
      create_dir_safe() {
        local dir="$1"
        mkdir -p "$dir" || {
          echo -e "${YELLOW}‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é $dir. –ü—Ä–æ–±—É–µ–º —Å sudo...${RESET}"
          if [[ "$OS_TYPE" == "linux" ]]; then
            sudo mkdir -p "$dir"
          else
            mkdir -p "$dir"
          fi
        }
      }
      
      # –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
      create_dir_safe "$BASE_DIR"
      create_dir_safe "$BACKUP_DIR"
      create_dir_safe "$DATED_BACKUP_DIR"
      
      # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞, —Ä–∞–∑—ã–º–µ–Ω–æ–≤—ã–≤–∞—é—â–∞—è —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∏–µ —Å—Å—ã–ª–∫–∏
      copy_with_deref() {
        local src="$1"
        local dst="$2"
        
        if [[ -L "$src" ]]; then
          # –ï—Å–ª–∏ —ç—Ç–æ —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∞—è —Å—Å—ã–ª–∫–∞, –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ–Ω–∞ –Ω–µ –±–∏—Ç–∞—è
          local target=$(readlink -f "$src" 2>/dev/null || readlink "$src")
          if [[ -e "$target" ]]; then
            echo "üîÑ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –ø–æ —Å—Å—ã–ª–∫–µ: $src -> $target"
            if [[ "$OS_TYPE" == "linux" ]]; then
              cp -pL "$src" "$dst" || sudo cp -pL "$src" "$dst"
            else
              cp -RL "$src" "$dst"
            fi
          else
            echo -e "${YELLOW}‚ö†Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –±–∏—Ç—É—é —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫—É—é —Å—Å—ã–ª–∫—É: $src${RESET}"
          fi
        elif [[ -f "$src" ]]; then
          # –ï—Å–ª–∏ —ç—Ç–æ –æ–±—ã—á–Ω—ã–π —Ñ–∞–π–ª
          if [[ -s "$src" ]]; then  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–µ–ø—É—Å—Ç–æ–π —Ñ–∞–π–ª
            echo "üîÑ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞: $src"
            if [[ "$OS_TYPE" == "linux" ]]; then
              cp -p "$src" "$dst" || sudo cp -p "$src" "$dst"
            else
              cp -p "$src" "$dst"
            fi
          else
            echo -e "${YELLOW}‚ö†Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—É—Å—Ç–æ–π —Ñ–∞–π–ª: $src${RESET}"
          fi
        elif [[ -d "$src" ]]; then
          # –ï—Å–ª–∏ —ç—Ç–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è
          echo "üîÑ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: $src"
          if [[ "$OS_TYPE" == "linux" ]]; then
            cp -a "$src" "$dst" || sudo cp -a "$src" "$dst"
          else
            cp -R "$src" "$dst"
          fi
        fi
      }
      
      # –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
      if [[ "$EXISTING_CONFIGS" == *"ZSH"* ]]; then
        echo "üîÑ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ ZSH..."
        create_dir_safe "$DATED_BACKUP_DIR/zsh"
        
        if [[ -e "$HOME/.zshrc" ]]; then
          copy_with_deref "$HOME/.zshrc" "$DATED_BACKUP_DIR/zsh/"
        fi
        
        if [[ -d "$HOME/.oh-my-zsh" ]]; then
          if [[ -L "$HOME/.oh-my-zsh" ]]; then
            echo "üîÑ –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∞—è —Å—Å—ã–ª–∫–∞ .oh-my-zsh, –∫–æ–ø–∏—Ä—É–µ–º –Ω–∞—Å—Ç–æ—è—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é"
            local omz_target=$(readlink -f "$HOME/.oh-my-zsh" 2>/dev/null || readlink "$HOME/.oh-my-zsh")
            if [[ -d "$omz_target" ]]; then
              if [[ "$OS_TYPE" == "linux" ]]; then
                cp -a "$omz_target" "$DATED_BACKUP_DIR/zsh/oh-my-zsh" || sudo cp -a "$omz_target" "$DATED_BACKUP_DIR/zsh/oh-my-zsh"
              else
                cp -R "$omz_target" "$DATED_BACKUP_DIR/zsh/oh-my-zsh"
              fi
            else
              echo -e "${YELLOW}‚ö†Ô∏è –°—Å—ã–ª–∫–∞ .oh-my-zsh —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é${RESET}"
            fi
          else
            if [[ "$OS_TYPE" == "linux" ]]; then
              cp -a "$HOME/.oh-my-zsh" "$DATED_BACKUP_DIR/zsh/" || sudo cp -a "$HOME/.oh-my-zsh" "$DATED_BACKUP_DIR/zsh/"
            else
              cp -R "$HOME/.oh-my-zsh" "$DATED_BACKUP_DIR/zsh/"
            fi
          fi
        fi
      fi
  
      if [[ "$EXISTING_CONFIGS" == *"TMUX"* ]]; then
        echo "üîÑ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ TMUX..."
        create_dir_safe "$DATED_BACKUP_DIR/tmux"
        
        [[ -e "$HOME/.tmux.conf" ]] && copy_with_deref "$HOME/.tmux.conf" "$DATED_BACKUP_DIR/tmux/"
        [[ -e "$HOME/.tmux.conf.local" ]] && copy_with_deref "$HOME/.tmux.conf.local" "$DATED_BACKUP_DIR/tmux/"
      fi
  
      if [[ "$EXISTING_CONFIGS" == *"VIM"* ]]; then
        echo "üîÑ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ VIM..."
        create_dir_safe "$DATED_BACKUP_DIR/vim"
        
        [[ -e "$HOME/.vimrc" ]] && copy_with_deref "$HOME/.vimrc" "$DATED_BACKUP_DIR/vim/"
        
        if [[ -d "$HOME/.vim" || -L "$HOME/.vim" ]]; then
          if [[ -L "$HOME/.vim" ]]; then
            echo "üîÑ –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∞—è —Å—Å—ã–ª–∫–∞ .vim, –∫–æ–ø–∏—Ä—É–µ–º –Ω–∞—Å—Ç–æ—è—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é"
            local vim_target=$(readlink -f "$HOME/.vim" 2>/dev/null || readlink "$HOME/.vim")
            if [[ -d "$vim_target" ]]; then
              if [[ "$OS_TYPE" == "linux" ]]; then
                cp -a "$vim_target" "$DATED_BACKUP_DIR/vim/vim" || sudo cp -a "$vim_target" "$DATED_BACKUP_DIR/vim/vim"
              else
                cp -R "$vim_target" "$DATED_BACKUP_DIR/vim/vim"
              fi
            else
              echo -e "${YELLOW}‚ö†Ô∏è –°—Å—ã–ª–∫–∞ .vim —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é${RESET}"
            fi
          else
            if [[ "$OS_TYPE" == "linux" ]]; then
              cp -a "$HOME/.vim" "$DATED_BACKUP_DIR/vim/" || sudo cp -a "$HOME/.vim" "$DATED_BACKUP_DIR/vim/"
            else
              cp -R "$HOME/.vim" "$DATED_BACKUP_DIR/vim/"
            fi
          fi
        fi
      fi
      
      echo -e "${GREEN}‚úÖ –ë—ç–∫–∞–ø —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ $DATED_BACKUP_DIR${RESET}"
    else
      echo -e "${YELLOW}‚ö†Ô∏è –ë—ç–∫–∞–ø –Ω–µ –±—ã–ª —Å–æ–∑–¥–∞–Ω –ø–æ –≤—ã–±–æ—Ä—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.${RESET}"
    fi
  else
    echo -e "${GREEN}‚úÖ –°—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ.${RESET}"
  fi
fi

#----------------------------------------------------
# üõ†Ô∏è –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏
#----------------------------------------------------

# –û—á–∏—â–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ .myshell (–∫—Ä–æ–º–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ backup)
echo -e "${BLUE}üßπ –û—á–∏—â–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ $BASE_DIR (–∫—Ä–æ–º–µ –±—ç–∫–∞–ø–æ–≤)...${RESET}"

# –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –û–°
if [[ "$OS_TYPE" == "linux" ]]; then
  if find "$BASE_DIR" -mindepth 1 ! -path "$BACKUP_DIR" ! -path "$BACKUP_DIR/*" -print0 | xargs -0 rm -rf 2>/dev/null; then
    echo "‚úÖ –°—Ç–∞—Ä—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç —É–¥–∞–ª–µ–Ω"
  else
    echo -e "${YELLOW}‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç. –ü—Ä–æ–±—É–µ–º —Å sudo...${RESET}"
    sudo find "$BASE_DIR" -mindepth 1 ! -path "$BACKUP_DIR" ! -path "$BACKUP_DIR/*" -print0 | xargs -0 sudo rm -rf
  fi
else
  # –ù–∞ macOS –∏—Å–ø–æ–ª—å–∑—É–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥—Ä—É–≥–æ–π –ø–æ–¥—Ö–æ–¥
  for item in "$BASE_DIR"/*; do
    if [[ "$item" != "$BACKUP_DIR" ]]; then
      rm -rf "$item" 2>/dev/null
    fi
  done
  echo "‚úÖ –°—Ç–∞—Ä—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç —É–¥–∞–ª–µ–Ω"
fi

#----------------------------------------------------
# üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ Oh-My-Zsh
#----------------------------------------------------

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è Oh-My-Zsh
clean_ohmyzsh() {
  echo -e "${YELLOW}üßπ –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Oh-My-Zsh...${RESET}"
  
  if [[ -L "$HOME/.oh-my-zsh" ]]; then
    echo "  - –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∞—è —Å—Å—ã–ª–∫–∞, —É–¥–∞–ª—è–µ–º..."
    ( cd "$HOME" && exec /bin/rm -f .oh-my-zsh )
  elif [[ -d "$HOME/.oh-my-zsh" ]]; then
    echo "  - –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è, —É–¥–∞–ª—è–µ–º —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ..."
    if [[ "$OS_TYPE" == "linux" ]]; then
      /bin/rm -rf "$HOME/.oh-my-zsh" || sudo /bin/rm -rf "$HOME/.oh-my-zsh"
    else
      /bin/rm -rf "$HOME/.oh-my-zsh"
    fi
  fi
  
  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ
  if [[ -e "$HOME/.oh-my-zsh" ]]; then
    echo -e "${RED}‚ùå –û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å Oh-My-Zsh. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—Ä—É—á–Ω—É—é:${RESET}"
    echo "   rm -f $HOME/.oh-my-zsh"
    return 1
  fi
  
  return 0
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Oh-My-Zsh (–ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç, —á—Ç–æ –ø—É—Ç—å —É–∂–µ —á–∏—Å—Ç)
install_ohmyzsh() {
  echo -e "${BLUE}üì• –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Oh-My-Zsh...${RESET}"
  
  # –û—á–∏—â–∞–µ–º –∏ —Å–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –Ω–∞—à–µ–º –æ–∫—Ä—É–∂–µ–Ω–∏–∏
  if [[ "$OS_TYPE" == "linux" ]]; then
    mkdir -p "$BASE_DIR/ohmyzsh" || sudo mkdir -p "$BASE_DIR/ohmyzsh"
  else
    mkdir -p "$BASE_DIR/ohmyzsh"
  fi
  
  # –ö–ª–æ–Ω–∏—Ä—É–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π Oh-My-Zsh –Ω–∞–ø—Ä—è–º—É—é –≤ –Ω–∞—à–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
  git clone --depth=1 "$GIT_OMZ_REPO" "$BASE_DIR/ohmyzsh" || {
    echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è Oh-My-Zsh${RESET}"
    return 1
  }
  
  # –°–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∞—è —Å—Å—ã–ª–∫–∞ –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–∞ –ø–æ–∑–∂–µ –≤ –±–ª–æ–∫–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è
  
  echo -e "${GREEN}‚úÖ Oh-My-Zsh —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${RESET}"
  return 0
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Oh-My-Zsh
update_ohmyzsh() {
  echo -e "${BLUE}üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Oh-My-Zsh...${RESET}"
  
  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
  if [[ -x "$HOME/.oh-my-zsh/tools/upgrade.sh" ]]; then
    # –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
    export RUNZSH=no
    export KEEP_ZSHRC=yes
    "$HOME/.oh-my-zsh/tools/upgrade.sh" --unattended && {
      echo -e "${GREEN}‚úÖ Oh-My-Zsh —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω${RESET}"
      return 0
    }
  fi
  
  # –ï—Å–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å –∏–ª–∏ —Å–∫—Ä–∏–ø—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, —Å–æ–æ–±—â–∞–µ–º –æ–± –æ—à–∏–±–∫–µ
  echo -e "${YELLOW}‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å Oh-My-Zsh${RESET}"
  return 1
}

# –û—Å–Ω–æ–≤–Ω–æ–π –±–ª–æ–∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è Oh-My-Zsh
echo -e "${BLUE}üì¶ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Oh-My-Zsh...${RESET}"

if [[ -d "$HOME/.oh-my-zsh" && ! -L "$HOME/.oh-my-zsh" ]]; then
  # –ï—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è (–Ω–µ —Å—Å—ã–ª–∫–∞), –ø—Ä–æ–±—É–µ–º –æ–±–Ω–æ–≤–∏—Ç—å
  update_ohmyzsh || {
    # –ï—Å–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å, –æ—á–∏—â–∞–µ–º –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–Ω–æ–≤–æ
    echo -e "${YELLOW}‚ö†Ô∏è –í—ã–ø–æ–ª–Ω—è–µ–º –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫—É Oh-My-Zsh...${RESET}"
    clean_ohmyzsh && install_ohmyzsh || exit 1
  }
else
  # –ï—Å–ª–∏ —ç—Ç–æ —Å—Å—ã–ª–∫–∞ –∏–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –æ—á–∏—â–∞–µ–º –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–Ω–æ–≤–æ
  clean_ohmyzsh && install_ohmyzsh || exit 1
fi

#----------------------------------------------------
# üßπ –ß–∏—Å—Ç–∏–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ
#----------------------------------------------------

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
clean_item() {
 local item="$1"
 local target="$HOME/$item"
 
 # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø —ç–ª–µ–º–µ–Ω—Ç–∞ –∏ —É–¥–∞–ª—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ
 if [[ -L "$target" ]]; then
   echo -e "üîó –£–¥–∞–ª—è–µ–º —Å–∏–º–ª–∏–Ω–∫: ${CYAN}$target${RESET}"
   rm "$target" 2>/dev/null || {
     if [[ "$OS_TYPE" == "linux" ]]; then
       sudo rm "$target"
     else
       rm -f "$target"
     fi
   }
 elif [[ -f "$target" ]]; then
   echo -e "üìÑ –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª: ${CYAN}$target${RESET}"
   rm "$target" 2>/dev/null || {
     if [[ "$OS_TYPE" == "linux" ]]; then
       sudo rm "$target"
     else
       rm -f "$target"
     fi
   }
 elif [[ -d "$target" ]]; then
   echo -e "üìÅ –£–¥–∞–ª—è–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é: ${CYAN}$target${RESET}"
   rm -rf "$target" 2>/dev/null || {
     if [[ "$OS_TYPE" == "linux" ]]; then
       sudo rm -rf "$target"
     else
       rm -rf "$target"
     fi
   }
 else
   echo -e "‚ÑπÔ∏è  –ü—Ä–æ–ø—É—Å–∫–∞–µ–º: ${CYAN}$target${RESET} (–Ω–µ –Ω–∞–π–¥–µ–Ω)"
 fi
}

# –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ñ–∏–≥–æ–≤ –∏ —Å–∏–º–ª–∏–Ω–∫–æ–≤
echo -e "${YELLOW}üßπ –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ñ–∏–≥–∏ –∏ —Å–∏–º–ª–∏–Ω–∫–∏...${RESET}"

for item in $TRASH; do
 clean_item "$item"
done

echo -e "${GREEN}‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.${RESET}"

#----------------------------------------------------
# üì• –ö–ª–æ–Ω–∏—Ä—É–µ–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ
#----------------------------------------------------

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
clone_repo() {
 local repo_url="$1"
 local target_dir="$2"
 
 echo -e "${BLUE}üì• –ö–ª–æ–Ω–∏—Ä—É–µ–º $repo_url –≤ $target_dir...${RESET}"
 
 git clone "$repo_url" "$target_dir" || {
   echo -e "${YELLOW}‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞...${RESET}"
   if [[ "$OS_TYPE" == "linux" ]]; then
     sudo git clone "$repo_url" "$target_dir"
   else
     rm -rf "$target_dir" 2>/dev/null
     git clone "$repo_url" "$target_dir"
   fi
 }
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ç–∞–ª–æ–≥–∞ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –ø—Ä–∞–≤
create_dir() {
 local dir="$1"
 
 mkdir -p "$dir" || {
   echo -e "${YELLOW}‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é $dir. –ü—Ä–æ–±—É–µ–º —Å sudo...${RESET}"
   if [[ "$OS_TYPE" == "linux" ]]; then
     sudo mkdir -p "$dir"
   else
     mkdir -p "$dir"
   fi
 }
}

clone_repo "$GIT_TMUX_REPO" "$BASE_DIR/tmux"
clone_repo "$GIT_DOTFILES_REPO" "$BASE_DIR/dotfiles"

create_dir "$VIM_COLORS_DIR"
create_dir "$VIM_PLUGINS_DIR"

if [[ ! -d "$VIM_COLORS_DIR/papercolor-theme" ]]; then
 clone_repo "https://github.com/NLKNguyen/papercolor-theme.git" "$VIM_COLORS_DIR/papercolor-theme"
else
 echo -e "${GREEN}‚úÖ PaperColor —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω${RESET}"
fi

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–æ–π —Å—Å—ã–ª–∫–∏ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –û–°
create_symlink() {
 local src="$1"
 local dst="$2"
 
 ln -sf "$src" "$dst" || {
   echo -e "${YELLOW}‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫—É—é —Å—Å—ã–ª–∫—É. –ü—Ä–æ–±—É–µ–º —Å sudo...${RESET}"
   if [[ "$OS_TYPE" == "linux" ]]; then
     sudo ln -sf "$src" "$dst"
   else
     rm -f "$dst" 2>/dev/null
     ln -sf "$src" "$dst"
   fi
 }
}

create_symlink "$VIM_COLORS_DIR/papercolor-theme/colors/PaperColor.vim" "$VIM_COLORS_DIR/PaperColor.vim"

echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–ª–∞–≥–∏–Ω—ã –¥–ª—è Zsh..."
create_dir "$BASE_DIR/ohmyzsh/custom/plugins"

clone_repo "https://github.com/zsh-users/zsh-autosuggestions" "$BASE_DIR/ohmyzsh/custom/plugins/zsh-autosuggestions"
clone_repo "https://github.com/zsh-users/zsh-syntax-highlighting" "$BASE_DIR/ohmyzsh/custom/plugins/zsh-syntax-highlighting"

#----------------------------------------------------
# ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è
#----------------------------------------------------

echo "‚öôÔ∏è –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º zsh..."
create_symlink "$BASE_DIR/dotfiles/.zshrc" "$HOME/.zshrc"

echo "‚öôÔ∏è –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º vim..."
create_symlink "$BASE_DIR/dotfiles/.vimrc" "$HOME/.vimrc"
create_symlink "$VIM_DIR" "$HOME/.vim"

echo "‚öôÔ∏è –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º tmux..."
create_symlink "$BASE_DIR/tmux/.tmux.conf" "$HOME/.tmux.conf"
create_symlink "$BASE_DIR/dotfiles/.tmux.conf.local" "$HOME/.tmux.conf.local"

echo "‚öôÔ∏è –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Oh-My-Zsh..."
create_symlink "$BASE_DIR/ohmyzsh" "$HOME/.oh-my-zsh"

#----------------------------------------------------
# üß∞ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ ZShell –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
#----------------------------------------------------
if [[ "$(basename "$SHELL")" != "zsh" ]]; then
 echo "üîÅ –ú–µ–Ω—è–µ–º shell –Ω–∞ Zsh..."
 ZSH_PATH=$(which zsh)
 
 # –†–∞–∑–ª–∏—á–∏—è –¥–ª—è Linux –∏ macOS
 if [[ "$OS_TYPE" == "linux" ]]; then
   # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ zsh –≤ /etc/shells
   if ! grep -q "$ZSH_PATH" /etc/shells; then
     echo -e "${YELLOW}‚ö†Ô∏è –î–æ–±–∞–≤–ª—è–µ–º $ZSH_PATH –≤ /etc/shells...${RESET}"
     echo "$ZSH_PATH" | sudo tee -a /etc/shells > /dev/null
   fi
   
   # –ú–µ–Ω—è–µ–º –æ–±–æ–ª–æ—á–∫—É –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π
   if ! chsh -s "$ZSH_PATH" 2>/dev/null; then
     echo -e "${YELLOW}‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å –æ–±–æ–ª–æ—á–∫—É. –ü—Ä–æ–±—É–µ–º —Å sudo...${RESET}"
     sudo chsh -s "$ZSH_PATH" "$USER"
   fi
 elif [[ "$OS_TYPE" == "macos" ]]; then
   # –ù–∞ macOS –ø—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–∞—á–µ
   if ! grep -q "$ZSH_PATH" /etc/shells; then
     echo -e "${YELLOW}‚ö†Ô∏è –î–æ–±–∞–≤–ª—è–µ–º $ZSH_PATH –≤ /etc/shells...${RESET}"
     echo "$ZSH_PATH" | sudo tee -a /etc/shells > /dev/null
   fi
   
   # –ù–∞ macOS chsh —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–µ–º–Ω–æ–≥–æ –∏–Ω–∞—á–µ
   chsh -s "$ZSH_PATH" || {
     echo -e "${YELLOW}‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å –æ–±–æ–ª–æ—á–∫—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—Ä—É—á–Ω—É—é:${RESET}"
     echo "chsh -s $ZSH_PATH"
   }
 fi
 
 echo -e "${GREEN}‚úÖ Zsh —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∫–∞–∫ –æ–±–æ–ª–æ—á–∫–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é. –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤—Å—Ç—É–ø—è—Ç –≤ —Å–∏–ª—É –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞.${RESET}"
else
 echo "‚úÖ Zsh —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∫–∞–∫ shell –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é."
fi

#----------------------------------------------------
# ‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
#----------------------------------------------------

# –û–±–Ω–æ–≤–ª—è–µ–º –≤–ª–∞–¥–µ–ª—å—Ü–∞ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ –∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
echo -e "${BLUE}üõ†Ô∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞...${RESET}"

if [[ "$OS_TYPE" == "linux" ]]; then
 # –î–ª—è Linux –æ—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –±—ã–ª–æ, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–ª–æ
 sudo chown -R "$USER":"$USER" "$BASE_DIR"
 
 # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∏–µ —Å—Å—ã–ª–∫–∏ —Å—É—â–µ—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–¥ —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π –ø—Ä–∞–≤
 for link in "$HOME/.oh-my-zsh" "$HOME/.vim" "$HOME/.zshrc" "$HOME/.vimrc" "$HOME/.tmux.conf" "$HOME/.tmux.conf.local"; do
   if [[ -L "$link" ]]; then
     sudo chown -h "$USER":"$USER" "$link" 2>/dev/null
   fi
 done
elif [[ "$OS_TYPE" == "macos" ]]; then
 # –ù–∞ macOS –∏—Å–ø–æ–ª—å–∑—É–µ–º –≥—Ä—É–ø–ø—É "staff", –∫–æ—Ç–æ—Ä–∞—è —è–≤–ª—è–µ—Ç—Å—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π –≥—Ä—É–ø–ø–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
 chown -R "$USER:staff" "$BASE_DIR" 2>/dev/null || {
   # –ï—Å–ª–∏ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–æ, –ø—Ä–æ–±—É–µ–º –±–µ–∑ —É–∫–∞–∑–∞–Ω–∏—è –≥—Ä—É–ø–ø—ã
   echo -e "${YELLOW}‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞ —Å –≥—Ä—É–ø–ø–æ–π staff. –ü—Ä–æ–±—É–µ–º –±–µ–∑ –≥—Ä—É–ø–ø—ã...${RESET}"
   chown -R "$USER" "$BASE_DIR" 2>/dev/null
 }
 
 # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∏–µ —Å—Å—ã–ª–∫–∏
 for link in "$HOME/.oh-my-zsh" "$HOME/.vim" "$HOME/.zshrc" "$HOME/.vimrc" "$HOME/.tmux.conf" "$HOME/.tmux.conf.local"; do
   if [[ -L "$link" ]]; then
     chown -h "$USER:staff" "$link" 2>/dev/null || chown -h "$USER" "$link" 2>/dev/null
   fi
 done
fi

#----------------------------------------------------
# üóëÔ∏è –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
#----------------------------------------------------
if [[ "$OS_TYPE" == "linux" ]]; then
 rm -rf "$HOME/init-shell" 2>/dev/null || sudo rm -rf "$HOME/init-shell"
else
 rm -rf "$HOME/init-shell" 2>/dev/null
fi

#----------------------------------------------------
# ‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ
#----------------------------------------------------
echo -e "${GREEN}üéâ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!${RESET}"

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ
if [[ "$OS_TYPE" == "macos" ]]; then
 echo -e "${BLUE}‚ÑπÔ∏è  –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ macOS:${RESET}"
 echo "  üì± –í–µ—Ä—Å–∏—è macOS: $(sw_vers -productVersion)"
 echo "  üîÑ –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: $(uname -m)"
 echo "  üß© –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –±—ã–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —Å –ø–æ–º–æ—â—å—é Homebrew"
elif [[ "$OS_TYPE" == "linux" ]]; then
 echo -e "${BLUE}‚ÑπÔ∏è  –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ Linux:${RESET}"
 echo "  üêß –î–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤: $DISTRO"
 echo "  üîÑ –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: $(uname -m)"
 if [[ -f /etc/os-release ]]; then
   source /etc/os-release
   echo "  üì± –í–µ—Ä—Å–∏—è: $NAME $VERSION_ID"
 fi
fi

echo -e "${YELLOW}‚ö†Ô∏è –í–∞–∂–Ω–æ:${RESET} –î–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –≤—Å–µ—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π –º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞"
echo -e "${BLUE}üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É –∫–æ–º–∞–Ω–¥ zsh, vim –∏ tmux${RESET}"


